{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Z:/pet-projects-working/quiz-builder/frontend/pages/create.tsx"],"sourcesContent":["// pages/create.tsx\r\nimport { useForm, useFieldArray, Controller } from \"react-hook-form\"\r\nimport { z } from \"zod\"\r\nimport { zodResolver } from \"@hookform/resolvers/zod\"\r\nimport axios from \"axios\"\r\nimport { useState } from \"react\"\r\nimport { useRouter } from \"next/router\"\r\n\r\n\r\nconst questionTypes = [\"boolean\", \"input\", \"checkbox\"] as const\r\nconst API_URL = process.env.NEXT_PUBLIC_API_URL\r\nconst questionSchema = z.object({\r\n  type: z.enum(questionTypes),\r\n  text: z.string().min(1, \"Question text is required\"),\r\n  options: z.any().optional(), // тимчасово\r\n  answer: z.string(),\r\n}).superRefine((data, ctx) => {\r\n  if (data.type === \"checkbox\") {\r\n    if (!Array.isArray(data.options) || data.options.length < 2) {\r\n      ctx.addIssue({\r\n        path: [\"options\"],\r\n        code: z.ZodIssueCode.custom,\r\n        message: \"At least two options are required for checkbox type\"\r\n      })\r\n    }\r\n  }\r\n})\r\n\r\n\r\nconst quizSchema = z.object({\r\n  title: z.string().min(1, \"Title is required\"),\r\n  questions: z.array(questionSchema)\r\n})\r\n\r\ntype QuizForm = z.infer<typeof quizSchema>\r\n\r\nexport default function CreateQuiz() {\r\n  const [loading, setLoading] = useState(false)\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    watch,\r\n    reset\r\n  } = useForm<QuizForm>({\r\n    resolver: zodResolver(quizSchema),\r\n    defaultValues: {\r\n      title: \"\",\r\n      questions: []\r\n    }\r\n  })\r\n\r\n  const { fields, append, remove } = useFieldArray({\r\n    control,\r\n    name: \"questions\"\r\n  })\r\n\r\n  const onSubmit = async (data: QuizForm) => {\r\n    setLoading(true)\r\n    try {\r\n        await axios.post(`${API_URL}/quizzes`, data)\r\n        alert(\"Quiz created!\")\r\n        reset()\r\n    } catch (err) {\r\n        alert(\"Error creating quiz\")\r\n    } finally {\r\n        setLoading(false)\r\n    }\r\n  }\r\n\r\n  const questions = watch(\"questions\")\r\n\r\n  return (\r\n    <div className=\"max-w-2xl mx-auto p-4\">\r\n    <button onClick={() => router.push('/')} className=\"underline text-blue-600 mb-4\">\r\n      ← Back to main page\r\n    </button>\r\n\r\n      <h1 className=\"text-2xl font-bold mb-4\">Create a New Quiz</h1>\r\n\r\n      <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-4\">\r\n        <div>\r\n          <label className=\"block font-medium\">Quiz Title</label>\r\n          <input\r\n            {...register(\"title\")}\r\n            className=\"w-full border px-3 py-2 rounded\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"space-y-6\">\r\n          {fields.map((field, index) => {\r\n            const type = questions?.[index]?.type\r\n            return (\r\n              <div key={field.id} className=\"p-4 border rounded space-y-2\">\r\n                <div className=\"flex justify-between items-center\">\r\n                  <h2 className=\"font-semibold\">Question {index + 1}</h2>\r\n                  <button type=\"button\" onClick={() => remove(index)} className=\"text-red-500\">Remove</button>\r\n                </div>\r\n\r\n                <div>\r\n                  <label>Question Text</label>\r\n                  <input\r\n                    {...register(`questions.${index}.text`)}\r\n                    className=\"w-full border px-2 py-1 rounded\"\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label>Type</label>\r\n                  <select {...register(`questions.${index}.type`)} className=\"w-full border px-2 py-1 rounded\">\r\n                    {questionTypes.map(type => (\r\n                      <option key={type} value={type}>{type}</option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n\r\n                {type === \"checkbox\" && (\r\n                  <div>\r\n                    <label>Options (comma separated)</label>\r\n                    <input\r\n                      {...register(`questions.${index}.options` as const)}\r\n                      className=\"w-full border px-2 py-1 rounded\"\r\n                      placeholder=\"Option 1, Option 2\"\r\n                    />\r\n                  </div>\r\n                )}\r\n\r\n                <div>\r\n                  <label>Answer</label>\r\n                  <input\r\n                    {...register(`questions.${index}.answer`)}\r\n                    className=\"w-full border px-2 py-1 rounded\"\r\n                    placeholder={type === \"checkbox\" ? \"Comma separated correct answers\" : \"\"}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"bg-blue-500 text-white px-4 py-2 rounded\"\r\n          onClick={() =>\r\n            append({ type: \"input\", text: \"\", answer: \"\", options: [] })\r\n          }\r\n        >\r\n          + Add Question\r\n        </button>\r\n\r\n        <div>\r\n          <button\r\n            type=\"submit\"\r\n            disabled={loading}\r\n            className=\"bg-green-600 text-white px-6 py-2 rounded\"\r\n          >\r\n            {loading ? \"Saving...\" : \"Create Quiz\"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}